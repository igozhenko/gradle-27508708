apply plugin: 'com.android.application'

android {
    lintOptions {
        abortOnError false
    }
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        applicationId "com.tivogi.gradle"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 123
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // 2 dimensions of flavors. API is more important than ABI.
    flavorDimensions "api", "abi"

    productFlavors {
        gingerbread {
            flavorDimension "api"
            minSdkVersion 10
            versionCode = 1
        }
        icecreamSandwich {
            flavorDimension "api"
            minSdkVersion 14
            // this must be higher than the gingerbread version to ensure update of the
            // app when the device gets a system update from GB to ICS
            versionCode = 2
        }
        x86 {
            flavorDimension "abi"
//            ndk.abiFilter "x86"
            // this is the flavor part of the version code.
            // It must be higher than the arm one for devices supporting
            // both, as x86 is preferred.
            versionCode = 3
        }
        arm {
            flavorDimension "abi"
//            ndk.abiFilter "armeabi-v7a"
            versionCode = 1
        }
        mips {
            flavorDimension "abi"
            // It must be higher than the arm one for devices supporting
            // both, as mips is preferred.
//            ndk.abiFilter "mips"
            versionCode = 2
        }
        fat {
            flavorDimension "abi"
            // fat binary, lowest version code to be
            // the last option
            versionCode = 0
        }
    }

// make per-variant version code
    applicationVariants.all { variant ->
        // get the version code of each flavor
        def apiVersion = variant.productFlavors.get(0).versionCode
        def abiVersion = variant.productFlavors.get(1).versionCode

        // set the composite code
        variant.mergedFlavor.versionCode = apiVersion * 1000000 + abiVersion * 100000 + defaultConfig.versionCode
    }


    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def apk = output.outputFile;
            def newName =  "${output.name}-${variant.mergedFlavor.versionCode}"
            if (variant.buildType.versionNameSuffix) {
                newName += "-${variant.buildType.versionNameSuffix}"
            }
            if (output.zipAlign) {
                output.zipAlign.outputFile = new File((File) apk.parentFile, newName + '-aligned.apk');
            }
            output.packageApplication.outputFile = new File((File) apk.parentFile, newName + ".apk")
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.3'
}
